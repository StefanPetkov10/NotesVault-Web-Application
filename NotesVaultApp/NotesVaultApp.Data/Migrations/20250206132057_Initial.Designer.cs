// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotesVaultApp.Data;

#nullable disable

namespace NotesVaultApp.Data.Migrations
{
    [DbContext(typeof(NotesVaultDbContext))]
    [Migration("20250206132057_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NotesVaultApp.Data.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8dbc8abe-dac4-4203-ac82-6b70eaa95ab7"),
                            Name = 1
                        },
                        new
                        {
                            Id = new Guid("6412b356-57b0-4952-bc46-34920e67c73a"),
                            Name = 2
                        });
                });

            modelBuilder.Entity("NotesVaultApp.Data.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c1017d7-631b-471a-b6b6-21a83ca07ff9"),
                            CategoryId = new Guid("8dbc8abe-dac4-4203-ac82-6b70eaa95ab7"),
                            Content = "This is the content of the first note",
                            CreatedAt = new DateTime(2025, 2, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Title = "First Note",
                            UpdatedAt = new DateTime(2025, 2, 7, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = new Guid("7639f555-2f90-44b0-9a2b-408c397f410c"),
                            CategoryId = new Guid("6412b356-57b0-4952-bc46-34920e67c73a"),
                            Content = "This is the content of the second note",
                            CreatedAt = new DateTime(2025, 2, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Title = "Second Note"
                        });
                });

            modelBuilder.Entity("NotesVaultApp.Data.Models.Note", b =>
                {
                    b.HasOne("NotesVaultApp.Data.Models.Category", "Category")
                        .WithMany("Notes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NotesVaultApp.Data.Models.Category", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
